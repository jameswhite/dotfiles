#!/bin/bash
export DOTFILE_HOME="$(cd ${HOME}/.dotfiles/home ; pwd)"
usage(){
  echo "$0 { -a | -r } <file_under_HOME>"
}

while [ ! -z "$*" ];do
  case $1 in
    -a)
      ACTION='add'
      shift 1
    ;;
    -r)
      ACTION='remove'
      shift 1
    ;;
    -i)
      ACTION='init'
      shift 1
    ;;
    *)
      FILE="$1";
      shift 1
    ;;
  esac
done

if [ -z "${ACTION}" ]; then
  usage
  exit 1
fi

case "${ACTION}" in
  "add")
     DIRECTORY="$(cd $(dirname $FILE); pwd)"
     RELATIVE_PATH=$(echo "$DIRECTORY" | sed -e "s+${HOME}/++")
     if [ "$RELATIVE_PATH" == "$DIRECTORY" ];then
       echo "Error: Only manages files under $HOME"
       exit 1
     fi
     [ ! -d "${DOTFILE_HOME}/$RELATIVE_PATH" ] && mkdir -p "${DOTFILE_HOME}/$RELATIVE_PATH"
     mv "${HOME}/$RELATIVE_PATH/$(basename $FILE)" "${DOTFILE_HOME}/$RELATIVE_PATH/$(basename $FILE)" &&  \
       ( cd "${HOME}/$RELATIVE_PATH"; ln -s "${DOTFILE_HOME}/$RELATIVE_PATH/$(basename $FILE)" ) &&  \
       ( cd "${DOTFILE_HOME}/$RELATIVE_PATH" && git add "$(basename $FILE)" && git commit -a -m "managing ${HOME}/$RELATIVE_PATH/$(basename $FILE)" )
  ;;
  "remove")
     DIRECTORY="$(cd $(dirname $FILE); pwd)"
     RELATIVE_PATH=$(echo "$DIRECTORY" | sed -e "s+${HOME}/++")
     if [ "$RELATIVE_PATH" == "$DIRECTORY" ];then
       echo "Error: Only manages files under $HOME"
       exit 1
     fi
     if [ ! -h ${HOME}/$RELATIVE_PATH/$(basename $FILE) ]; then
       echo "does not seem to be dotmanaged"
       exit 1
     else
       unlink "${HOME}/$RELATIVE_PATH/$(basename $FILE)" && \
       cp "${DOTFILE_HOME}/$RELATIVE_PATH/$(basename $FILE)" "${HOME}/$RELATIVE_PATH/$(basename $FILE)"
       ( cd "${DOTFILE_HOME}/$RELATIVE_PATH" && git rm "$(basename $FILE)" && git commit -a -m "no longer managing ${HOME}/$RELATIVE_PATH/$(basename $FILE)" )
     fi
  ;;
  "init")
    find "${DOTFILE_HOME}" -type f | while read FILE; do
      DIRECTORY="$(cd $(dirname $FILE); pwd)"
      RELATIVE_PATH=$(echo "$DIRECTORY" | sed -e "s+${DOTFILE_HOME}++" | sed -e 's+^/++')
      if [ -z "${RELATIVE_PATH}" ]; then
        TARGET="$(basename $FILE)"
      else
        TARGET="$RELATIVE_PATH/$(basename $FILE)"
      fi
      if [ ! -L "${HOME}/${TARGET}" ] ; then
        echo "${HOME}/${TARGET} exists and is not a symlink, skipping..."
      else
        if [ -h "${HOME}/${TARGET}" ] ; then
          if [ "$( readlink ${HOME}/${TARGET} )" != "${DOTFILE_HOME}/${TARGET}" ]; then
            echo "relinking $FILE"
            unlink "${HOME}/${TARGET}"
            ( cd "${HOME}/$RELATIVE_PATH"; ln -s "${DOTFILE_HOME}/${TARGET}" )
          else
            echo "looks good! : ${HOME}/${TARGET}"
          fi
        else
          echo "linking $FILE"
          ( cd "${HOME}/$RELATIVE_PATH"; ln -s "${DOTFILE_HOME}/${TARGET})" )
        fi
      fi
    done
  ;;
  *)
    usage
    exit 1
  ;;
esac
